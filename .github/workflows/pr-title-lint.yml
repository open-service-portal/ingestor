name: PR Title Lint

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

permissions:
  pull-requests: write
  statuses: write

jobs:
  validate-pr-title:
    runs-on: ubuntu-latest

    steps:
      - name: Validate PR title
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.pull_request.title;

            // Conventional commit types
            const types = [
              'feat',     // New feature
              'fix',      // Bug fix
              'docs',     // Documentation
              'style',    // Formatting, missing semicolons, etc.
              'refactor', // Code refactoring
              'perf',     // Performance improvements
              'test',     // Adding tests
              'build',    // Build system changes
              'ci',       // CI/CD changes
              'chore',    // Maintenance tasks
              'revert'    // Revert previous commit
            ];

            // Regex pattern for conventional commits
            // Format: type(optional-scope): description
            // Examples:
            //   feat: add new feature
            //   fix(api): resolve issue
            //   feat!: breaking change
            const pattern = new RegExp(`^(${types.join('|')})(\\(.+\\))?!?: .+`);

            const isValid = pattern.test(title);

            if (!isValid) {
              const message = `## ❌ PR Title Validation Failed

The PR title must follow the [Conventional Commits](https://www.conventionalcommits.org/) format:

\`\`\`
<type>(<optional-scope>): <description>
\`\`\`

### Valid Types
${types.map(t => `- \`${t}\``).join('\n')}

### Examples
- \`feat: add user authentication\`
              - \`fix: resolve login bug\`
- \`docs: update README\`
- \`chore(deps): update dependencies\`
- \`feat!: breaking API change\`

### Your PR Title
\`\`\`
${title}
\`\`\`

### Why This Matters
- Generates accurate changelogs automatically
- Helps determine semantic version bumps
- Makes project history more readable

Please update your PR title to match the format above.`;

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: message
              });

              await github.rest.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.payload.pull_request.head.sha,
                state: 'failure',
                context: 'PR Title Validation',
                description: 'PR title must follow conventional commits format'
              });

              core.setFailed('PR title does not follow conventional commits format');
            } else {
              await github.rest.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.payload.pull_request.head.sha,
                state: 'success',
                context: 'PR Title Validation',
                description: 'PR title follows conventional commits format ✅'
              });

              console.log('✅ PR title is valid:', title);
            }
