name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  pull-requests: write

jobs:
  create-release-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from tag
        id: version
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          VERSION=${TAG_NAME#v}
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "ðŸ“¦ Release version: $VERSION"

      - name: Create release branch
        run: |
          BRANCH_NAME="release/${{ steps.version.outputs.tag }}"
          git checkout -b "$BRANCH_NAME"
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
        id: branch

      - name: Prepare release
        run: |
          ./.github/scripts/prepare-release.sh "${{ steps.version.outputs.version }}"

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json CHANGELOG.md
          git commit -m "chore: release ${{ steps.version.outputs.tag }}"
          git push origin "${{ steps.branch.outputs.branch }}"

      - name: Create Pull Request
        uses: actions/github-script@v7
        with:
          script: |
            const version = '${{ steps.version.outputs.version }}';
            const tag = '${{ steps.version.outputs.tag }}';

            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `chore: release ${tag}`,
              head: '${{ steps.branch.outputs.branch }}',
              base: 'main',
              body: `## Release ${tag}

### ðŸ“¦ Version ${version}

This PR was automatically created by the release workflow.

**After merging:**
1. GitHub release will be created with tag ${tag}
2. npm publish workflow will trigger
3. Package version ${version} will be published to npm

### âœ… Checklist
- [x] Version updated in package.json
- [x] CHANGELOG.md updated
- [ ] Tests passing
- [ ] Ready to publish

---
**Note:** Add the \`ready-for-changelog\` label if you want to update the changelog for this release PR.`
            });

            console.log(\`âœ… Created PR #\${pr.number}: \${pr.html_url}\`);

      - name: Create GitHub Release
        uses: actions/github-script@v7
        with:
          script: |
            const tag = '${{ steps.version.outputs.tag }}';

            // Extract changelog for this version
            const fs = require('fs');
            let releaseNotes = 'See CHANGELOG.md for details.';

            try {
              const changelog = fs.readFileSync('CHANGELOG.md', 'utf8');
              const versionMatch = changelog.match(new RegExp(\`## v\${tag.replace('v', '')}[\\s\\S]*?(?=## |$)\`));
              if (versionMatch) {
                releaseNotes = versionMatch[0];
              }
            } catch (error) {
              console.log('Could not extract changelog:', error.message);
            }

            const { data: release } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tag,
              name: tag,
              body: releaseNotes,
              draft: false,
              prerelease: false
            });

            console.log(\`âœ… Created release: \${release.html_url}\`);
