# TEST ASSERTION - DO NOT BLINDLY REGENERATE
#
# Test: namespace
# Purpose: End-to-end test with template-namespace XRD using production templates
# Scenario: e2e
#
# This file contains the EXPECTED output for this test case.
# It should only be updated when:
#   1. Adding NEW features that intentionally change output
#   2. Fixing BUGS where the old output was incorrect
#   3. Modifying templates with a clear, documented purpose
#
# NEVER blindly regenerate this file without understanding WHY the output changed!
#
# To update after reviewing changes:
#   cp tests/output/e2e-namespace.yaml tests/e2e/assert-namespace.yaml
#
# This header will be stripped during test comparison.
# ---

apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: managednamespaces-openportal-dev
  title: Managed Namespace
  description: Create and manage ManagedNamespace resources
  tags:
    - crossplane
    - openportal-dev
    - namespace
    - kubernetes
    - core
    - rbac
    - infrastructure
    - platform
  annotations:
    backstage.io/managed-by: xrd-transform
    backstage.io/managed-by-location: provider:XRDTemplateEntityProvider
    backstage.io/managed-by-origin-location: provider:XRDTemplateEntityProvider
    crossplane.io/xrd-name: managednamespaces.openportal.dev
    crossplane.io/xrd-group: openportal.dev
    backstage.io/techdocs-ref: url:https://github.com/open-service-portal/template-namespace
spec:
  owner: platform-team
  type: crossplane-resource
  parameters:
    - title: Resource Configuration
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Name of the ManagedNamespace
          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
  steps:
    - id: workflow-info
      name: GitOps Workflow Information
      action: debug:log
      input:
        message: |
          üîÑ This template uses GitOps workflow with Pull Request approval:

          1. Generates your ManagedNamespace resource manifest
          2. Creates a Pull Request in the GitOps repository
          3. Flux deploys the resource after PR is merged

          Your resource will be created after the PR is approved and merged.
    - id: generateManifest
      name: Generate Kubernetes Resource Manifest
      action: terasky:claim-template
      input:
        parameters: ${{ parameters }}
        nameParam: name
        namespaceParam: ''
        ownerParam: owner
        excludeParams:
          - namespace
          - owner
          - gitopsOwner
          - gitopsRepo
          - gitopsTargetBranch
        apiVersion: openportal.dev/v1alpha1
        kind: ManagedNamespace
        clusters:
          - rancher-desktop
        removeEmptyParams: true
      output:
        text:
          - title: üìù Generated Manifest
            content: |
              **Kubernetes Resource Manifest Generated Successfully!** ‚úÖ

              **Resource Information:**
              - **Name**: `${{ parameters.name }}`
              - **Type**: ManagedNamespace
              - **API Version**: openportal.dev/v1alpha1
              - **Cluster**: rancher-desktop
              - **Scope**: Cluster-wide

              **Next Step**: Creating Pull Request in GitOps repository...
    - id: create-pull-request
      name: Create Pull Request
      action: publish:github:pull-request
      input:
        repoUrl: github.com?owner=open-service-portal&repo=catalog-orders
        branchName: ${{ "create-" + parameters.name + "-resource" }}
        title: ${{ "Create " + parameters.name + " Resource" }}
        description: Create ManagedNamespace resource ${{ parameters.name }}
        targetBranchName: main
      output:
        links:
          - title: View Pull Request
            icon: github
            url: ${{ steps['create-pull-request'].output.remoteUrl }}
        text:
          - title: üîÄ Pull Request Created
            content: >
              **Pull Request Created Successfully!** ‚úÖ


              Your ManagedNamespace resource manifest has been submitted for
              review.


              **GitOps Workflow:**

              1. ‚úÖ **Manifest Generated** - Your resource configuration is ready

              2. ‚úÖ **Pull Request Created** - Submitted to
              open-service-portal/catalog-orders

              3. ‚è≥ **Awaiting Approval** - Team will review and approve the PR

              4. ‚è≥ **Flux Deployment** - After merge, Flux will deploy to
              cluster rancher-desktop


              **‚ö†Ô∏è Important**: Your resource will be created **after the PR is
              approved and merged**, not immediately.


              Click "View Pull Request" above to monitor the approval process.
  output:
    text:
      - title: üìã GitOps Workflow Summary
        content: |
          **Your ManagedNamespace request has been submitted!** ‚úÖ

          **GitOps Repository:** open-service-portal/catalog-orders
          **Target Cluster:** rancher-desktop

          Your resource will be deployed after the PR is reviewed and merged.

---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: managednamespaces-openportal-dev-api
  title: Managed Namespace API
  description: API specification for ManagedNamespace
  tags:
    - crossplane
    - ingestor
    - openportal-dev
  annotations:
    backstage.io/managed-by: xrd-transform
    backstage.io/managed-by-location: provider:XRDTemplateEntityProvider
    backstage.io/managed-by-origin-location: provider:XRDTemplateEntityProvider
    crossplane.io/xrd-name: managednamespaces.openportal.dev
spec:
  type: openapi
  lifecycle: experimental
  owner: platform-team
  definition: |
    openapi: 3.0.0
    info:
      title: ManagedNamespace API
      version: v1alpha1
      description: OpenAPI specification for ManagedNamespace
    paths:
      /managednamespaces:
        get:
          summary: List managednamespaces
          responses:
            '200':
              description: Success
        post:
          summary: Create ManagedNamespace
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    spec:
                      type: object
                      description: ManagedNamespace configuration
                      properties:
                        name:
                          type: string
                          description: "Name of the namespace to create"
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          minLength: 1
                          maxLength: 63
                      required:
                        - name
                    status:
                      type: object
                      properties:
                        ready:
                          type: boolean
                          description: Whether the resource is ready
                        phase:
                          type: string
                          description: Current phase of the resource
                        message:
                          type: string
                          description: Status message
          responses:
            '201':
              description: Created

